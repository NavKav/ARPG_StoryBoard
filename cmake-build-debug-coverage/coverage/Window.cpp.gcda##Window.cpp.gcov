        -:    0:Source:C:/Users/navid/CLionProjects/ProjectTT/src/Window.cpp
        -:    0:Graph:C:\Users\navid\CLionProjects\ProjectTT\cmake-build-debug-coverage\CMakeFiles\ProjectTT.dir\src\Window.cpp.gcno
        -:    0:Data:C:\Users\navid\CLionProjects\ProjectTT\cmake-build-debug-coverage\CMakeFiles\ProjectTT.dir\src\Window.cpp.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1://
        -:    2:// Created by navid on 13/05/2021.
        -:    3://
        -:    4:
        -:    5:#include <iostream>
        -:    6:
        -:    7:#include "Window.h"
        -:    8:
        -:    9:using namespace std;
        -:   10:
function _ZN6WindowC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjj called 1 returned 100% blocks executed 71%
        1:   11:Window::Window(const string &windowName, unsigned int sizeX, unsigned int sizeY) {
        1:   12:    SDL_Init(SDL_INIT_VIDEO);
        1:   12-block  0
call    0 returned 1
        1:   13:    _actualWindow = SDL_CreateWindow(windowName.c_str(),
call    0 returned 1
call    1 returned 1
        -:   14:                                     SDL_WINDOWPOS_UNDEFINED,
        -:   15:                                     SDL_WINDOWPOS_UNDEFINED,
        -:   16:                                     (int) sizeX, (int) sizeY, 0);
        1:   17:    if (_actualWindow == nullptr) {
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    #####:   18:        std::cout << "Window::Window() :" << SDL_GetError()
    %%%%%:   18-block  0
call    0 never executed
call    1 never executed
call    2 never executed
    #####:   19:                  << std::endl;
call    0 never executed
        -:   20:    }
        1:   21:    _renderer = SDL_CreateRenderer(_actualWindow, -1, SDL_RENDERER_SOFTWARE);
        1:   21-block  0
call    0 returned 1
        1:   22:    _surface = SDL_GetWindowSurface(_actualWindow);
call    0 returned 1
        1:   23:    _texture = SDL_CreateTextureFromSurface(_renderer, _surface);
call    0 returned 1
        1:   24:    _background = SDL_ConvertSurface(_surface, _surface->format, 0);
call    0 returned 1
        1:   25:    SDL_SetRenderTarget(_renderer,_texture);
call    0 returned 1
        1:   26:}
        -:   27:
function _ZN6WindowD2Ev called 1 returned 100% blocks executed 100%
        2:   28:Window::~Window() {
        1:   29:    SDL_DestroyTexture(_texture);
        1:   29-block  0
call    0 returned 1
        1:   30:    SDL_DestroyRenderer(_renderer);
call    0 returned 1
        1:   31:    SDL_DestroyWindow(_actualWindow);
call    0 returned 1
        -:   32:
        1:   33:    SDL_Quit();
call    0 returned 1
        1:   34:}
        -:   35:
function _ZN6Window8setTitleERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 0 returned 0% blocks executed 0%
    #####:   36:void Window::setTitle(const std::string &windowTitle) {
    #####:   37:    SDL_SetWindowTitle(_actualWindow, windowTitle.c_str());
    %%%%%:   37-block  0
call    0 never executed
call    1 never executed
    #####:   38:}
        -:   39:
function _ZN6Window7drawIMGEiiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 1 returned 100% blocks executed 82%
        1:   40:void Window::drawIMG(int x, int y, const string &name) {
        1:   41:    SDL_Surface* img = IMG_Load(("ressource/image/" + name).c_str());
        1:   41-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   41-block  1
call    3 returned 1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   41-block  2
call    7 returned 1
    $$$$$:   41-block  3
call    8 never executed
    $$$$$:   41-block  4
        -:   42:
        1:   43:    if ( img == NULL) {
branch  0 taken 1 (fallthrough)
branch  1 taken 0
        1:   44:        cout << "Window::drawIMG() : " << SDL_GetError() << endl;
        1:   44-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   44-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   44-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:   44-block  3
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        -:   45:    }
        -:   46:
        -:   47:    SDL_Rect p;
        1:   48:    p.x = x;
        1:   49:    p.y = y;
        -:   50:
        1:   51:    SDL_BlitSurface(img,NULL, _surface, &p);
        1:   51-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   52:    SDL_FreeSurface(img);
        1:   52-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   53:}
        1:   53-block  0
        -:   54:
function _ZN6Window17drawBackgroundIMGEiiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 0 returned 0% blocks executed 0%
    #####:   55:void Window::drawBackgroundIMG(int x, int y, const string &name) {
    #####:   56:    SDL_Surface* img = IMG_Load(name.c_str());
    %%%%%:   56-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
        -:   57:    SDL_Rect p;
    #####:   58:    p.x = x;
    #####:   59:    p.y = y;
        -:   60:
    #####:   61:    SDL_BlitSurface(img,NULL, _background, &p);
    %%%%%:   61-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   62:    SDL_FreeSurface(img);
    %%%%%:   62-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   63:}
    %%%%%:   63-block  0
        -:   64:
function _ZN6Window7refreshEv called 1 returned 100% blocks executed 100%
        1:   65:void Window::refresh() {
        -:   66:    /*SDL_UpdateTexture(_texture, NULL, _surface->pixels, _surface->pitch);
        -:   67:    SDL_RenderClear(_renderer);
        -:   68:    SDL_RenderCopy(_renderer, _texture, NULL, NULL);
        -:   69:    SDL_RenderPresent(_renderer);
        1:   70:    */SDL_RenderPresent(_renderer);
        1:   70-block  0
call    0 returned 1
        1:   71:}
